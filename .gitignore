__pycache__/
__pypackages__/
!docs/index.wpp
!flaskapi/templates/base.html
!flaskapi/templates/demo.html
.~lock.*#
.access
.cache
.cache/
.configs
.coverage
.coverage.*
.directory
.dmypy.json
.docusaurus
.dynamodb/
.eggs/
.env
.env.development.local
.env.local
.env.production.local
.env.test.local
.eslintcache
.fuse_hidden*
.fusebox/
.grunt
.hypothesis/
.installed.cfg
.ipynb_checkpoints
.lock-wscript
.mypy_cache/
.next
.nfs*
.node_repl_history
.nox/
.npm
.nuxt
.nyc_output
.parcel-cache
.pdm.toml
.pnp.*
.pnpm-debug.log*
.pybuilder/
.pyre/
.pytest_cache/
.Python
.pytype/
.ropeproject
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
.scrapy
.serverless/
.spyderproject
.spyproject
.stylelintcache
.temp
.tern-port
.tox/
.Trash-*
.venv
.venv/
.vscode-test
.vuepress/dist
.webassets-cache
.yarn-integrity
.yarn/build-state.yml
.yarn/cache
.yarn/install-state.gz
.yarn/unplugged
[Dd]esktop.ini
*.cab
*.cover
*.egg
*.egg-info/
*.lcov
*.lnk
*.log
*.manifest
*.mo
*.msi
*.msix
*.msm
*.msp
*.pid
*.pid.lock
*.pot
*.py,cover
*.py[cod]
*.pyc
*.sage.py
*.seed
*.so
*.spec
*.stackdump
*.tgz
*.tsbuildinfo
*~
*$py.class
/site
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   commonly ignored for libraries.
#   For a library or package, you might want to ignore these files since the code is
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   https://pdm.fming.dev/#use-with-ide
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#   in version control.
#   install all needed dependencies.
#   intended to run in multiple environments; otherwise, check them in:
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#  Usually these files are written by a python script from a template
# .nfs files are created when an open file is removed but is still being accessed
# .python-version
# Bower dependency directory (https://bower.io/)
# Byte-compiled / optimized / DLL files
# C extensions
# Celery stuff
# Comment in the public line in if your project uses Gatsby and not Next.js
# Compiled binary addons (https://nodejs.org/api/addons.html)
# Coverage directory used by tools like istanbul
# Cython debug symbols
# Dependency directories
# Diagnostic reports (https://nodejs.org/api/report.html)
# Directory for instrumented libs generated by jscoverage/JSCover
# Distribution / packaging
# Django stuff:
# Docusaurus cache and generated files
# dotenv environment variable files
# Dump file
# DynamoDB Local files
# Environments
# Flask stuff:
# Folder config file
# FuseBox cache
# Gatsby files
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
# https://nextjs.org/blog/next-9-1#public-directory-support
# Installer logs
# IPython
# Jupyter Notebook
# KDE directory preferences
# LibreOffice locks
# Linux trash folder which might appear on any partition or disk
# Logs
# Microbundle cache
# mkdocs documentation
# mypy
# Next.js build output
# node-waf configuration
# Nuxt.js build / generate output
# nyc test coverage
# Optional eslint cache
# Optional npm cache directory
# Optional REPL history
# Optional stylelint cache
# Output of 'npm pack'
# parcel-bundler cache (https://parceljs.org/)
# pdm
# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
# pipenv
# poetry
# public
# PyBuilder
# PyCharm
# pyenv
# PyInstaller
# Pyre type checker
# pytype static type analyzer
# Recycle Bin used on file shares
# Rope project settings
# Runtime data
# SageMath parsed files
# Scrapy stuff:
# Serverless directories
# Snowpack dependency directory (https://snowpack.dev/)
# Sphinx documentation
# Spyder project settings
# Stores VSCode versions used for testing VSCode extensions
# temporary files which can be created if a process still has a handle open of a deleted file
# TernJS port file
# Translations
# TypeScript cache
# Unit test / coverage reports
# vuepress build output
# vuepress v2.x temp and cache directory
# Windows Installer files
# Windows shortcuts
# Windows thumbnail cache files
# Yarn Integrity file
# yarn v2
#.idea/
#pdm.lock
#Pipfile.lock
#poetry.lock
$RECYCLE.BIN/
bower_components
build/
build/Release
cat-config.sh
celerybeat-schedule
celerybeat.pid
client.http
cover/
coverage
coverage.xml
cython_debug/
db.sqlite3
db.sqlite3-journal
demo.mjs
demo.py
dev.db.sqlite
develop-eggs/
dist
dist/
dmypy.json
docs/_build/
docs/**/*
downloads/
eggs/
ehthumbs_vista.db
ehthumbs.db
env.bak/
env/
ENV/
flaskapi/demo.py
flaskapi/env.py
flaskapi/templates/*
heroku-config-deploy.sh
heroku-config-set.sh
htmlcov/
index.http
instance/
ipython_config.py
jspm_packages/
lerna-debug.log*
lib-cov
lib/
lib64/
local_settings.py
logs
MANIFEST
node_modules/
nosetests.xml
npm-debug.log*
out
parts/
pids
pip-delete-this-directory.txt
pip-log.txt
profile_default/
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
scp-config.sh
sdist/
share/python-wheels/
storage/**/*
target/
Thumbs.db
Thumbs.db:encryptable
var/
venv.bak/
venv/
web_modules/
wheels/
yarn-debug.log*
yarn-error.log*
heroku-config-set.sh
run-dev.sh
db.access.py
job-example*.yml
jfejcxjyujx-firebase-adminsdk-ci75i-a4ad90c0ca.json
demo/*
temp.txt
log.demo.txt
demo-firebase-adminsdk-send-message.py
demo.png
config/vars.py
.aws
deploy-vars.sh
credentials.xmQ56DFAZTRjIzg6.json
redis.conf
